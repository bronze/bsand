<!DOCTYPE html>
<html lang="{{ meta.lang }}" x-data="darkmode">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ meta.title }}</title>
  <script>// On page load or when changing themes, best to add inline in `head` to avoid FOUC
  try {
    if (
      localStorage.theme==='dark'||
      (!('theme' in localStorage)&&
        window.matchMedia('(prefers-color-scheme: dark)').matches)||
      document.documentElement.getAttribute('data-theme')==='dark'
    ) {
      document.documentElement.classList.add('dark')
      document.documentElement.setAttribute('data-theme', 'dark')
      localStorage.theme='dark'
    } else {
      document.documentElement.classList.remove('dark')
      document.documentElement.setAttribute('data-theme', 'light')
    }
  } catch (_) {}
  </script>
  {# <link rel="preload" href="/assets/fonts/storysonear/Fontspring-DEMO-ccthestorysonear-regular.woff2" as="font" type="font/woff2" crossorigin="">
  <link rel="preload" href="/assets/fonts/storyends/Fontspring-DEMO-ccthestoryends-regular.woff2" as="font" type="font/woff2" crossorigin=""> #}


    {% include "meta.njk" %}

  <script>
  /* Font loading: Critical FOFT with preload, see: https://www.zachleat.com/web/comprehensive-webfonts/#critical-foft-with-preload */
  (function() {
    if( "fonts" in document ) {
      // Optimization for Repeat Views
      if( sessionStorage.fontsLoadedCriticalFoftPreload ) {
        document.documentElement.className += " fonts-loaded-2";
        return;
      }
      document.fonts.load("1em 'Inter Variable'").then(function () {
        document.documentElement.className += " fonts-loaded-1";

        Promise.all([
          document.fonts.load("1em 'TheStoryEnds'"),
          document.fonts.load("1em 'TheStorySoNear'"),
          document.fonts.load("1em 'Noto Serif Variable'"),
          //document.fonts.load("italic 700 1em 'DM Sans'")
        ]).then(function () {
          document.documentElement.className += " fonts-loaded-2";

          // Optimization for Repeat Views
          sessionStorage.fontsLoadedCriticalFoftPreload = true;
        });
      });
    }
  })();

  </script>

  <link rel="stylesheet" href="/assets/css/main.scss">
</head>
<body >
  <nav aria-label="Skip Links">
    <ul class="off-screen">
      <li>
        <a href="#primary_nav" class="skip-link">
          Skip to Primary Navigation
        </a>
      </li>
      <li>
        <a href="#primary_content" class="skip-link">
          Skip to Primary Content
        </a>
      </li>
    </ul>
  </nav>
  {% include "sitemenu.njk" %}
  <a id="primary_content"></a>
  {# <div class="layout" role="document"> #}
    {# <main id="main" class="main"> #}
        {{ content | safe }}
    {# </main> #}
    {% include "footer.njk" %}
  {# </div> #}
  <!-- Back to top button -->
  <button
    type="button"
    class="!fixed bottom-5 right-5 hidden rounded-full bg-primary/60 p-4 text-xs font-medium uppercase leading-tight text-white shadow-md transition duration-300 ease-in-out hover:bg-accent/80 hover:shadow-lg focus:bg-accent/80 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-accent active:shadow-lg"
    id="btn-back-to-top">
    <svg
      aria-hidden="true"
      focusable="false"
      data-prefix="fas"
      class="w-8 h-8"
      role="img"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 448 512">
      <path
        fill="currentColor"
        d="M34.9 289.5l-22.2-22.2c-9.4-9.4-9.4-24.6 0-33.9L207 39c9.4-9.4 24.6-9.4 33.9 0l194.3 194.3c9.4 9.4 9.4 24.6 0 33.9L413 289.4c-9.5 9.5-25 9.3-34.3-.4L264 168.6V456c0 13.3-10.7 24-24 24h-32c-13.3 0-24-10.7-24-24V168.6L69.2 289.1c-9.3 9.8-24.8 10-34.3.4z"></path>
    </svg>
  </button>
  <script>
    const mybutton = document.getElementById("btn-back-to-top");

    // When the user scrolls down 20px from the top of the document, show the button

    const scrollFunction = () => {
      if (
        document.body.scrollTop > 20 ||
        document.documentElement.scrollTop > 20
      ) {
        mybutton.classList.remove("hidden");
      } else {
        mybutton.classList.add("hidden");
      }
    };
    const backToTop = () => {
      window.scrollTo({ top: 0, behavior: "smooth" });
    };

    // When the user clicks on the button, scroll to the top of the document
    mybutton.addEventListener("click", backToTop);

    window.addEventListener("scroll", scrollFunction);
  </script>
  <script type="module" src="{{ '/assets/js/main.js' | url }}"></script>
</body>
</html>